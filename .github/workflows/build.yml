name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-host
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: ''

      - name: Build with Gradle
        run: |
          ./gradlew zipRelease
          ./gradlew zipDebug

      - name: Package symbols and mappings
        run: |
          zip -r -9 "module/release/symbols-${{ github.sha }}.zip" module/build/symbols/ service/build/outputs/mapping/ 

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Post to Telegram
        if: success()
        env:
          CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          EVENT_NAME: ${{ github.event_name }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          COMMIT_URL: ${{ github.event.head_commit.url }}
          PULL_REQUEST_TITLE: ${{ github.event.pull_request.title }}
          PULL_REQUEST_BODY: ${{ github.event.pull_request.body }}
          PULL_REQUEST_URL: ${{ github.event.pull_request.html_url }}
          REF: ${{ github.ref }}
          SHA: ${{ github.sha }}
        run: |
          if [ -n "$BOT_TOKEN" ] && [ -n "$CHANNEL_ID" ]; then
              python3 -m pip install --upgrade telethon
              python3 .github/workflows/post.py module/release
          fi
